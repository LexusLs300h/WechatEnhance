name: Build WeChat Tweak

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  build-tweak:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Dependencies
        run: |
          brew update
          # 添加unzip以支持zip格式解压
          for d in make git ldid xz curl wget unzip; do brew list $d || BREW_INSTALL+=( $d ); done
          [ ${#BREW_INSTALL[@]} -gt 0 ] && brew install ${BREW_INSTALL[@]}
          xcode-select --install || true
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Theos & SDK
        run: |
          rm -rf theos
          git clone --depth 1 https://github.com/LexusLs300h/theos.git
          cd theos && git submodule update --init --recursive
          [ ! -f makefiles/master.mk ] && { echo "Theos initialization failed"; exit 1; }

          SDK=16.5
          mkdir -p sdks
          SDK_TEMP="sdks/sdk.tar.gz"
          
          # 下载SDK
          for u in https://github.com/LexusLs300h/sdks/archive/refs/tags/${SDK}.tar.gz; do
            curl -fL --retry 3 --connect-timeout 15 -o "$SDK_TEMP" "$u" && break
          done
          [ ! -s "$SDK_TEMP" ] && { echo "SDK download failed"; exit 1; }
          
          # 验证文件大小(至少100MB)
          [ $(stat -f%z "$SDK_TEMP") -lt 104857600 ] && { echo "SDK file corrupted"; rm "$SDK_TEMP"; exit 1; }

          # 创建临时解压目录
          mkdir -p sdks/temp
          
          # 增强版格式检测与解压
          ARCHIVE_TYPE=$(file -b "$SDK_TEMP" | awk '{print $1}')
          echo "Detected archive type: $ARCHIVE_TYPE"
          
          case "$ARCHIVE_TYPE" in
            gzip)
              tar -zxf "$SDK_TEMP" -C sdks/temp || { echo "Gzip extraction failed"; exit 1; }
              ;;
            XZ)
              tar -Jxf "$SDK_TEMP" -C sdks/temp || { echo "XZ extraction failed"; exit 1; }
              ;;
            Zip)
              unzip -q "$SDK_TEMP" -d sdks/temp || { echo "Zip extraction failed"; exit 1; }
              ;;
            *)
              echo "Unsupported archive type: $ARCHIVE_TYPE"
              exit 1
              ;;
          esac

          # 查找SDK目录
          SDK_DIR=$(find sdks/temp -name "iPhoneOS${SDK}.sdk" -type d -print -quit)
          [ -z "$SDK_DIR" ] && { echo "SDK not found after extraction"; exit 1; }
          
          # 移动SDK到最终位置并清理
          mv "$SDK_DIR" sdks/ && rm -rf sdks/temp "$SDK_TEMP"
          
          # 验证核心头文件
          [ ! -f "sdks/iPhoneOS${SDK}.sdk/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" ] && {
            echo "Missing core SDK headers";
            exit 1;
          }

      - name: Build
        run: |
          export THEOS=$(pwd)
          export SDKVERSION=16.5
          export SYSROOT=$THEOS/sdks/iPhoneOS16.5.sdk
          [ ! -d "$SYSROOT" ] && { echo "SYSROOT invalid"; exit 1; }
          make clean package SCHEME=rootless

      - uses: actions/upload-artifact@v4
        with:
          name: wechat-tweak-deb
          path: packages/*.deb
