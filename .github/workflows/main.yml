name: Build WeChat Tweak

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-tweak:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          brew update
          # 定义需要安装的依赖列表
          DEPS=(make git ldid xz curl wget)
          for dep in "${DEPS[@]}"; do
            # 检查依赖是否已安装
            if ! brew list "$dep" &>/dev/null; then
              echo "Installing $dep..."
              brew install "$dep"
            else
              echo "$dep is already installed, skipping."
            fi
          done
          xcode-select --install || true
          sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
          
      - name: Prepare Theos environment
        run: |
          # 清理旧的Theos目录
          rm -rf "$GITHUB_WORKSPACE/theos"
          
          # 克隆Theos仓库
          git clone https://github.com/LexusLs300h/theos.git "$GITHUB_WORKSPACE/theos"
          cd "$GITHUB_WORKSPACE/theos"
          git submodule update --init --recursive
          
          # 验证Theos核心文件
          if [ ! -f "$GITHUB_WORKSPACE/theos/makefiles/master.mk" ]; then
            echo "Error: Theos directory is invalid, master.mk not found!"
            ls -la "$GITHUB_WORKSPACE/theos/makefiles"
            exit 1
          fi
          
          # 下载并安装iOS SDK（强化版）
          SDK_VERSION="16.5"
          SDK_DIR="$GITHUB_WORKSPACE/theos/sdks"
          mkdir -p "$SDK_DIR"
          SDK_TEMP="$SDK_DIR/sdk.tar.gz"
          # 主备下载源
          SDK_URLS=(
              "https://github.com/LexusLs300h/sdks/archive/refs/tags/16.5.tar.gz")
                  
          # 尝试从多个源下载
          download_success=0
          for url in "${SDK_URLS[@]}"; do
            echo "Trying to download SDK from: $url"
            if curl -fL --retry 3 --connect-timeout 10 --output "$SDK_TEMP" "$url"; then
              download_success=1
              echo "Download successful from: $url"
              break
            fi
            echo "Failed to download from $url"
          done
          
          # 验证文件大小（至少100MB）
          SDK_MIN_SIZE=$((100 * 1024 * 1024)) # 100MB
          SDK_SIZE=$(stat -f%z "$SDK_TEMP")
          if [ $SDK_SIZE -lt $SDK_MIN_SIZE ]; then
            echo "Error: SDK file is too small ($((SDK_SIZE / 1024 / 1024))MB), likely corrupted"
            rm -f "$SDK_TEMP"
            exit 1
          fi
          
          # 解压并验证
          echo "Extracting SDK..."
          rm -rf "$SDK_DIR/temp"
          mkdir -p "$SDK_DIR/temp"
          
          # 根据文件扩展名选择解压方式
          if file "$SDK_TEMP" | grep -q "gzip"; then
            tar -zxf "$SDK_TEMP" -C "$SDK_DIR/temp"
          elif file "$SDK_TEMP" | grep -q "XZ"; then
            tar -Jxf "$SDK_TEMP" -C "$SDK_DIR/temp"
          else
            echo "Error: Unsupported archive format"
            exit 1
          fi
          
          # 查找实际SDK目录（处理不同压缩包结构）
          SDK_SOURCE=$(find "$SDK_DIR/temp" -name "iPhoneOS$SDK_VERSION.sdk" -type d | head -1)
          if [ -z "$SDK_SOURCE" ]; then
            echo "Error: Could not find SDK in extracted files"
            ls -laR "$SDK_DIR/temp" # 显示所有解压内容
            exit 1
          fi
          
          # 移动到最终位置
          mv "$SDK_SOURCE" "$SDK_DIR/"
          rm -rf "$SDK_DIR/temp" "$SDK_TEMP"
          
          # 最终验证SDK路径
          FINAL_SDK_PATH="$SDK_DIR/iPhoneOS$SDK_VERSION.sdk"
          if [ ! -d "$FINAL_SDK_PATH" ]; then
            echo "Error: Final SDK path is empty - $FINAL_SDK_PATH"
            ls -la "$SDK_DIR"
            exit 1
          fi
          
          # 验证关键头文件存在
          if [ ! -f "$FINAL_SDK_PATH/System/Library/Frameworks/Foundation.framework/Headers/Foundation.h" ]; then
            echo "Error: Missing core header files in SDK"
            exit 1
          fi
          
          echo "SDK successfully installed to: $FINAL_SDK_PATH"
          
      - name: Build Tweak
        run: |
          export THEOS="$GITHUB_WORKSPACE/theos"
          export SDKVERSION=16.5
          export SYSROOT="$THEOS/sdks/iPhoneOS16.5.sdk"
          
          # 再次验证构建时的SDK路径
          if [ ! -d "$SYSROOT" ]; then
            echo "Error: SYSROOT path is empty - $SYSROOT"
            exit 1
          fi
          
          make clean
          make package SCHEME=rootless
          
      - name: Archive DEB
        uses: actions/upload-artifact@v4
        with:
          name: wechat-tweak-deb
          path: ./packages/*.deb
